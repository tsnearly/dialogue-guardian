name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run unit tests on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    env:
      PYTHONPATH: dialogue-guardian/src

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache directory
        id: pip-cache
        run: echo "PIP_CACHE_DIR=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.PIP_CACHE_DIR }}
          key: ${{ runner.os }}-pip-${{ hashFiles('dialogue-guardian/dev-requirements.txt') }}-${{ hashFiles('dialogue-guardian/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install FFmpeg (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install FFmpeg (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install ffmpeg

      - name: Install FFmpeg (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install ffmpeg

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd dialogue-guardian
          pip install -r dev-requirements.txt
          pip install -e . -v

      - name: Run tests with coverage
        run: |
          cd dialogue-guardian/src
          python -m pytest ../tests/ --cov=guardian --cov-report=xml --cov-report=html

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./dialogue-guardian/coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: dialogue-guardian/src
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd dialogue-guardian
          pip install -r dev-requirements.txt
          pip install -e . -v

      - name: Run linting
        run: |
          cd dialogue-guardian
          flake8 src/ tests/ --config .flake8
          black --check src/ tests/ --line-length=88
          isort --check-only src/ tests/

  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          cd dialogue-guardian
          python -m build

      - name: Check package
        run: |
          cd dialogue-guardian
          twine check dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dialogue-guardian/dist/
