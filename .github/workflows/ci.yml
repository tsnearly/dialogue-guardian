name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

# Global environment variables
env:
  PYTHONPATH: dialogue-guardian/src
  PYTHON_VERSION: "3.11"

jobs:
  # Fast quality checks job - runs first to fail fast
  quality:
    runs-on: ubuntu-latest
    outputs:
      python-cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Generate cache key
        id: cache-key
        run: |
          echo "key=${{ runner.os }}-py${{ env.PYTHON_VERSION }}-pip-${{ hashFiles('dialogue-guardian/pyproject.toml', 'dialogue-guardian/dev-requirements.txt') }}" >> $GITHUB_OUTPUT

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            dialogue-guardian/.venv
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-py${{ env.PYTHON_VERSION }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          cd dialogue-guardian
          pip install -r dev-requirements.txt
          pip install -e . -v

      - name: Run quality checks
        run: |
          cd dialogue-guardian
          # Linting
          flake8 src/ tests/ --config .flake8
          black --check src/ tests/ --line-length=88
          isort --check-only src/ tests/
          # Type checking
          mypy src/guardian/ --ignore-missing-imports

  # Test matrix - only runs after quality checks pass
  test:
    needs: quality
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        # Reduce matrix for non-main branches to save resources
        exclude:
          - os: windows-latest
            python-version: "3.9"
          - os: windows-latest 
            python-version: "3.10"
          - os: macos-latest
            python-version: "3.9"
          - os: macos-latest
            python-version: "3.10"

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache FFmpeg binaries
        id: ffmpeg-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/ffmpeg
            /usr/local/bin/ffmpeg
            /usr/local/bin/ffprobe
            C:\ProgramData\chocolatey\lib\ffmpeg
          key: ${{ runner.os }}-ffmpeg-v1
          restore-keys: |
            ${{ runner.os }}-ffmpeg-

      - name: Install FFmpeg (Ubuntu)
        if: matrix.os == 'ubuntu-latest' && steps.ffmpeg-cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install FFmpeg (macOS)
        if: matrix.os == 'macos-latest' && steps.ffmpeg-cache.outputs.cache-hit != 'true'
        run: |
          brew install ffmpeg

      - name: Install FFmpeg (Windows)
        if: matrix.os == 'windows-latest' && steps.ffmpeg-cache.outputs.cache-hit != 'true'
        run: |
          choco install ffmpeg -y

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/AppData/Local/pip/Cache
            ~/Library/Caches/pip
          key: ${{ runner.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('dialogue-guardian/pyproject.toml', 'dialogue-guardian/dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Explicitly install an older setuptools for Python 3.8 compatibility
          # This is a workaround for setuptools versions that dropped Python 3.8 support
          # while still being picked up by pip for older Python versions.
          if python -c "import sys; exit(sys.version_info < (3, 9))"; then
            echo "Installing setuptools==65.5.1 for Python 3.8"
            pip install setuptools==65.5.1
          fi
          cd dialogue-guardian
          pip install -r dev-requirements.txt
          pip install -e . -v

      - name: Run tests with coverage
        run: |
          cd dialogue-guardian/src
          python -m pytest ../tests/ --cov=guardian --cov-report=xml --cov-report=html --tb=short

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == env.PYTHON_VERSION
        uses: codecov/codecov-action@v5
        with:
          files: ./dialogue-guardian/coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

  # Build job - only runs on one platform after tests pass
  build:
    needs: [quality, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.base_ref == 'main')
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache build dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-build-pip-${{ hashFiles('dialogue-guardian/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-build-pip-

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          cd dialogue-guardian
          python -m build

      - name: Check package
        run: |
          cd dialogue-guardian
          twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dialogue-guardian/dist/
          retention-days: 7
