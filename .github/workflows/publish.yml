name: PyPI Package

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        cd dialogue-guardian
        python -m build
    
    - name: Check package
      run: |
        cd dialogue-guardian
        twine check dist/*
    
    - name: Upload to Test PyPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && secrets.TEST_PYPI_API_TOKEN != ''
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        cd dialogue-guardian
        twine upload --repository testpypi dist/*
    
    - name: Upload to PyPI
      if: github.event_name == 'release' && secrets.PYPI_API_TOKEN != ''
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        cd dialogue-guardian
        twine upload dist/*

  test-install:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.12']
    
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install FFmpeg (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
    
    - name: Install FFmpeg (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install ffmpeg
    
    - name: Install FFmpeg (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install ffmpeg
    
    - name: Test installation from PyPI
      if: github.event_name == 'release'
      run: |
        pip install dialogue-guardian
        guardian --help
    
    - name: Test installation from Test PyPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      run: |
        pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ dialogue-guardian
        guardian --help