# SPDX-FileCopyrightText: 2025 Tony Snearly
# SPDX-License-Identifier: OSL-3.0
name: Security Scan

# Focused security scanning workflow
# Note: Basic security checks are now handled in quality.yml
# This workflow focuses on comprehensive security analysis and compliance
on:
  push:
    branches: [main]
    paths:
      - "dialogue-guardian/src/**"
      - "dialogue-guardian/requirements*.txt"
      - "dialogue-guardian/pyproject.toml"
  pull_request:
    branches: [main]
    paths:
      - "dialogue-guardian/src/**"
      - "dialogue-guardian/requirements*.txt"
      - "dialogue-guardian/pyproject.toml"
  schedule:
    - cron: "0 2 * * 1" # Weekly on Monday at 2 AM UTC
  workflow_dispatch:

jobs:
  dependency-security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Cache security tools
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-security-tools-v2
          restore-keys: |
            ${{ runner.os }}-security-tools-

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install safety pip-audit
          echo "Installing OSV-Scanner"
          curl -L "https://github.com/google/osv-scanner/releases/latest/download/osv-scanner_linux_amd64" -o osv-scanner
          chmod +x osv-scanner
          sudo mv osv-scanner /usr/local/bin/

      - name: Run comprehensive dependency security scan
        run: |
          cd dialogue-guardian
          echo "=== Safety Check ==="
          safety check --json --output safety-report.json || true
          safety check || echo "Safety vulnerabilities found"

          echo "=== Pip Audit ==="
          pip-audit --format=json --output=pip-audit-report.json || true
          pip-audit || echo "Pip audit vulnerabilities found"

          echo "=== OSV Scanner ===" 
          osv-scanner --format json --output osv-report.json . || echo "OSV vulnerabilities found"

      - name: Upload dependency security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-security-reports
          path: |
            dialogue-guardian/safety-report.json
            dialogue-guardian/pip-audit-report.json
            dialogue-guardian/osv-report.json
          retention-days: 30

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["python"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Get pip cache directory
        id: pip-cache
        shell: python
        run: |
          import subprocess
          import os
          result = subprocess.run(["pip", "cache", "dir"], capture_output=True, text=True)
          with open(os.environ["GITHUB_OUTPUT"], "a") as fh:
              fh.write(f"PIP_CACHE_DIR={result.stdout.strip()}\n")

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.PIP_CACHE_DIR }}
          key: ${{ runner.os }}-pip-${{ hashFiles('dialogue-guardian/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
